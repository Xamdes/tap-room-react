// Autogenerated using npm run gen App
/*
* Copy to other files
* import App from './App';
* <App/>
*/
import styled from 'styled-components';
import { Switch, Route } from 'react-router-dom';
import Header from './Header';
import Inventory from './Inventory';
import Error404 from './Error404';
import NewKegForm from './NewKegForm';

class App extends React.Component
{
  constructor(props) {
    super(props);
    this.state = {
      masterKegList: startingKegList
    };
    this.handleSellPints = this.handleSellPints.bind(this);
    this.handleRestockKeg = this.handleRestockKeg.bind(this);
    this.handleKegPush = this.handleKegPush.bind(this);
  }
  render(){
    return (
      <Main>
        <InnerMain className="container">
          <HeadOne className="jumbotron">Welcome to The Tap</HeadOne>
          <Header/>
          <Switch>
            <Route exact path='/' render={()=><Inventory
              kegList={this.state.masterKegList}
              onClickSellPints={this.handleSellPints}
              onClickRestockKeg={this.handleRestockKeg}
            />} />
            <Route exact path='/newkeg' render={()=><NewKegForm
              onClickPushKeg={this.handleKegPush}
            />} />
            <Route component={Error404} />
          </Switch>
        </InnerMain>
      </Main>
    );
  }

  handleKegPush(newKeg)
  {
    let newMasterKegList = this.state.masterKegList.slice();
    newMasterKegList.push(newKeg);
    this.setState({
      masterKegList: newMasterKegList
    });
  }

  handleSellPints(id,amount=1)
  {
    let newMasterKegList = this.state.masterKegList.slice();
    let newRemaining = parseInt(newMasterKegList[id].remaining);
    newRemaining -= amount;
    newMasterKegList[id].remaining = newRemaining.toString();
    this.setState({
      masterKegList: newMasterKegList
    });
  }

  handleRestockKeg(id,amount=1)
  {
    let newMasterKegList = this.state.masterKegList.slice();
    let newRemaining = parseInt(newMasterKegList[id].remaining);
    newRemaining += amount;
    newMasterKegList[id].remaining = newRemaining.toString();
    this.setState({
      masterKegList: newMasterKegList
    });
  }

}

export default App;

const Main = styled.div`
  background-color: #00665E;
  font-family: sans-serif;
  color: white;
  `;

const InnerMain = styled.div`
  background-color: black;
  font-family: sans-serif;
  padding-top: 50px;
  color: white;
  `;

const HeadOne = styled.h1`
  color: navy;
  text-align: center;
  `;


let startingKegList = [
  {
    name: 'Ruby Zozzle',
    brewer: 'Hi-Wheel',
    description: 'Sparkling Wine & Grapefruit',
    abv: '6.8%',
    price: '7',
    remaining: '20'
  },
  {
    name: 'Tart N Juicy',
    brewer: 'Epic',
    description: 'Sour IPA',
    abv: '4.5%',
    price: '6',
    remaining: '60'
  },
  {
    name: 'Hamm\'s',
    brewer: 'Miller/Coors',
    description: 'American Lager',
    abv: '4.7%',
    price: '3',
    remaining: '65'
  },
  {
    name: 'Prismatic',
    brewer: 'Ninkasi',
    description: 'Juicy IPA',
    abv:  '5.9%',
    price: '6',
    remaining: '75'
  },
  {
    name: 'Juicy Haze',
    brewer: 'New Belgium',
    description: 'India Pale Ale',
    abv:  '7.5%',
    price: '6',
    remaining: '18'
  },
  {
    name: '8 Hop',
    brewer: 'New Belgium',
    description: 'Pale Ale',
    abv:  '5.5%',
    price: '6',
    remaining: '58'
  }
];
